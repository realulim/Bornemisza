<?xml version="1.0" encoding="UTF-8"?>
<hazelcast xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-config-3.9.xsd"
           xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<network>
		<interfaces enabled="true">
			<interface>{{ pillar['privip'] }}</interface>
		</interfaces>
		<port auto-increment="false">5701</port>
		<join>
			<multicast enabled="true"></multicast>
		</join>
	</network>

	<group>
		<name>{{ pillar['ssldomain'] }}</name>
		<password>{{ pillar['hazelcast-password'] }}</password>
	</group>

	<ringbuffer name="NewUserAccount">
		<capacity>1000</capacity>
		<time-to-live-seconds>86400</time-to-live-seconds>
	</ringbuffer>
	<reliable-topic name="NewUserAccount">
		<statistics-enabled>true</statistics-enabled>
		<topic-overload-policy>DISCARD_OLDEST</topic-overload-policy>
	</reliable-topic>

	<map name="NewUserAccount_userId">
		<time-to-live-seconds>604800</time-to-live-seconds>
		<eviction-policy>LRU</eviction-policy>
		<max-size policy="PER_NODE">1000</max-size>
		<in-memory-format>BINARY</in-memory-format>
	</map>
	<map name="NewUserAccount_uuid">
		<time-to-live-seconds>604800</time-to-live-seconds>
		<eviction-policy>LRU</eviction-policy>
		<max-size policy="PER_NODE">1000</max-size>
		<in-memory-format>BINARY</in-memory-format>
	</map>

	<ringbuffer name="ChangeEmailRequest">
		<capacity>1000</capacity>
		<time-to-live-seconds>86400</time-to-live-seconds>
	</ringbuffer>
	<reliable-topic name="ChangeEmailRequest">
		<statistics-enabled>true</statistics-enabled>
		<topic-overload-policy>DISCARD_OLDEST</topic-overload-policy>
	</reliable-topic>

	<map name="ChangeEmailRequest_userId">
		<time-to-live-seconds>604800</time-to-live-seconds>
		<eviction-policy>LRU</eviction-policy>
		<max-size policy="PER_NODE">1000</max-size>
		<in-memory-format>BINARY</in-memory-format>
	</map>
	<map name="ChangeEmailRequest_uuid">
		<time-to-live-seconds>604800</time-to-live-seconds>
		<eviction-policy>LRU</eviction-policy>
		<max-size policy="PER_NODE">1000</max-size>
		<in-memory-format>BINARY</in-memory-format>
	</map>

	<ringbuffer name="ClusterMaintenance">
		<capacity>1000</capacity>
		<time-to-live-seconds>86400</time-to-live-seconds>
	</ringbuffer>
	<reliable-topic name="ClusterMaintenance">
		<statistics-enabled>true</statistics-enabled>
		<topic-overload-policy>DISCARD_OLDEST</topic-overload-policy>
	</reliable-topic>

	<cache name="DatabaseServers">
		<key-type class-name="java.lang.String" />
		<value-type class-name="java.util.List" />
		<backup-count>0</backup-count>
		<async-backup-count>1</async-backup-count>
		<in-memory-format>BINARY</in-memory-format>
	</cache>

	<map name="DbServerCandidates">
		<time-to-live-seconds>300</time-to-live-seconds>
		<eviction-policy>LRU</eviction-policy>
		<max-size policy="PER_NODE">271</max-size>
		<in-memory-format>BINARY</in-memory-format>
	</map>
	<map name="DbServerUtilisation">
		<in-memory-format>BINARY</in-memory-format>
	</map>

	<queue name="UuidWriteQueue">
		<statistics-enabled>true</statistics-enabled>
		<max-size>1000</max-size>
	</queue>

</hazelcast>
